@model WebApplication_Vy.Models.DTO.TripData.TripQueryDTO

@{
    ViewBag.Title = "Index";
}

<script type="text/javascript">
    $(function () {
        var time = ["00:00","01:00","02:00","03:00","04:00","05:00","06:00","07:00","08:00","09:00","10:00","11:00", "12:00","13:00", "14:00","15:00", "16:00","17:00", "18:00","19:00","20:00","21:00","22:00","23:00"];

        var dropdown = "";
        for (var i of time) {
            dropdown += "<option value='" + i + "'>" + i + "</option>";
        }
        $("#time").append(dropdown);
        $("#Return_Time").append(dropdown);
        

        var stations = [];
        var stationsData = fetch("https://itinerary.cloud.nsb.no/api/stops", { "credentials": "omit", "headers": { "accept": "application/json", "sec-fetch-mode": "cors", "x-language": "no" }, "referrer": "https://www.vy.no/bestill/velg-togavgang?from=Oslo%20S&fromDisplayName=Oslo%20S&fromType=train-station-name&to=Bergen&toDisplayName=Bergen&toType=train-station-name&departureDatetime=2019-09-24%2010%3A28&petFree=false&pasCats=1&numPasCats=1", "referrerPolicy": "no-referrer-when-downgrade", "body": null, "method": "GET", "mode": "cors" })
            .then(data => data.json()).then(data => {
                $.each(data, function (index, value) {
                    if (value.active && value.type === "TRAIN") {
                        stations.push(value.name)
                    }
                });
                stations.sort();
            });
        console.log(stations);

       $("#Round_Trip").on("click", function(e) {
         
             console.log(this);
             $("#Round_Trip").val(true);
             $("#Direct_Trip").prop('checked', false);
             $("#Return_Time").prop('required', true);
             $("#ReturnDiv").slideDown();
       });
       
       $("#Direct_Trip").on("click", function(e) {
           
            console.log(this);
            $("#Round_Trip").val(false);
            $("#Round_Trip").prop('checked', false);
            $("#Return_Time").prop('required', false)
            $("#ReturnDiv").slideUp();
       });
        
        var date = new Date();
        date.setDate(date.getDate()-1);

        //Form spesific javascript
        $('#dateandtime').datepicker({
            minDate: date,
            uiLibrary: 'bootstrap4',
            format: "yyyy-mm-dd"
        });
        $('#ReturnDate').datepicker({
            minDate: date,
            uiLibrary: 'bootstrap4',
            format: "yyyy-mm-dd"
        });

        $('.stations').autocomplete({
            source: stations 
        });

    });
</script>
<div id="ajax_form">
    @using (Ajax.BeginForm("Index", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Success" }))
    {
        @Html.AntiForgeryToken()
        <div align="center" style="padding-bottom: 100px">
            <h1>Hei, hvor vil du reise?</h1>
        </div>
        
        <div class="col h-100">
            <div class="row h-100 justify-content-center align-items-center">
                
                <div class="col-sm">
                    <div class="form-group">
                        <div class="col">
                            <div class="row float-right">
                                @Html.LabelFor(model => model.Departure_Station, "Departure", htmlAttributes: new {@class = "control-label col-md-2"})
                            </div>
                        </div>
                        <div class="col float-right">
                            @Html.EditorFor(model => model.Departure_Station[0], new {htmlAttributes = new {id = "", @class = "stations form-control float-right"}})
                            <p id="chosen"></p>
                            @Html.ValidationMessageFor(model => model.Departure_Station, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
                <div>
                    <a class="btn btn-lg px-1 " href="#" role="button"> <img src="../../Content/arrows.png" height="30" alt="arrows"></a>
                </div>
                
                <div class="col-sm">
                    <div class="form-group">
                        <div class="col">
                            <div class="row float-left">
                                @Html.LabelFor(model => model.Arrival_Station, "Destination", htmlAttributes: new {@class = "control-label col-md-2"})
                            </div>
                        </div>
                        <div class="col float-left">
                            @Html.EditorFor(model => model.Arrival_Station[0], new {htmlAttributes = new {id = "", @class = "stations form-control float-left"}})
                            <label id="postaltown"></label>
                            @Html.ValidationMessageFor(model => model.Arrival_Station, "", new {@class = "text-danger"})
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        
        <div>
            <div class="form-check">
                <input class="form-check-input" type="radio" id="Direct_Trip" value="" checked>
                <label class="form-check-label" for="exampleRadios1">
                    Default radio
                </label>
            </div>
            <div class="form-check">
                <input class="form-check-input" type="radio" name="Round_Trip" id="Round_Trip" value="false">
                <label class="form-check-label" for="exampleRadios2">
                    Second default radio
                </label>
            </div>
        </div>
        
        

        <div class="col h-100">
            <div class="row h-100 justify-content-center align-items-center">
                <div class="col-sm">
                    <div class="form-group">
                        <div class="col">
                            <div class="row float-right">
                                @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                                <div class="form-group">
                                    <div class="col" style="margin-left: 55% ">
                                        @Html.LabelFor(model => model.Date, htmlAttributes: new {@class = "control-label col-md-2"})
                                    </div>
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model.Date[0], new {htmlAttributes = new {id = "dateandtime", @class = "form-control"}})
                                        @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                

                <div class="col-sm">
                    <div class="row ">
                        <div class="form-group">
                            <div class="col">
                                <div class="row" style="margin-left: 20%">
                                    @Html.LabelFor(model => model.Time, htmlAttributes: new {@class = "control-label col-md-10"})
                                    <div class="col">
                                        <select id="time" name="Time[0]" class="custom-select form-control" required>
                                            <option value="" selected>Choose a time...</option>
                                        </select>

                                        @Html.ValidationMessageFor(model => model.Time, "", new {@class = "text-danger"})
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        
        <div id="ReturnDiv" style="display: none">    
            <div class="col h-100">
                <div class="row h-100 justify-content-center align-items-center">
                    <div class="col-sm">
                        <div class="form-group">
                            <div class="col">
                                <div class="row float-right">
                                    @Html.ValidationSummary(true, "", new {@class = "text-danger"})
                                    <div class="form-group">
                                        <div class="col" style="margin-left: 55% ">
                                            @Html.LabelFor(model => model.Date, htmlAttributes: new {@class = "control-label col-md-2"})
                                        </div>
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Date[1], new {htmlAttributes = new {id = "ReturnDate", @class = "form-control"}})
                                            @Html.ValidationMessageFor(model => model.Date, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                

                    <div class="col-sm">
                        <div class="row ">
                            <div class="form-group">
                                <div class="col">
                                    <div class="row" style="margin-left: 20%">
                                        @Html.LabelFor(model => model.Time, htmlAttributes: new {@class = "control-label col-md-10"})
                                        <div class="col">
                                            <select id="Return_Time" name="Time[1]" class="custom-select form-control">
                                                <option value="" selected>Choose a time...</option>
                                            </select>

                                            @Html.ValidationMessageFor(model => model.Time, "", new {@class = "text-danger"})
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
         </div>   
        
            
        <div align="center">
            <div class="form-group">
                <div class="col-sm">
                    <input type="submit" value="Videre" class="btn btn-secondary btn-lg btn-block m-5"/>
                </div>
            </div>
            <hr/>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12 text-success">
                    @ViewBag.Records
                </div>
            </div>
        </div>
        
       
    }
</div>

       
