@model WebApplication_Vy.Models.DTO.SubmitPurchaseDTO

@{
    ViewBag.Title = "CustomerDetails";
}

<script type="text/javascript">
    let ticketData = @Html.Raw(Json.Encode(ViewBag.Model));

    $(function() {
    let TripTickets = {Trip : null, ReturnTrip : null };
    ticketData.forEach(ticket => {
        if (ticket.Round_Trip === true ) {
           TripTickets.Trip = ticket;
           populateTripForm(ticket);
        } else if(ticketData.length > 1) {
            TripTickets.ReturnTrip = ticket;
            populateReturnTripForm(ticket);
            showHiddenCard(ticket);
        } else {
            TripTickets.Trip = ticket;
            populateTripForm(ticket);
        }
    });


    function showHiddenCard(ticket) {
    const hiddenCard =  ` <div class="card bg-light mb-3 col-ml4" id="ticketCard" style="max-width: 18rem;">
          <div class="card-header">Din valgte reise</div>
          <div class="card-body">
              <h5 class="card-title">
                  <span>
                      <img id="tripIcon" src='@Url.Content("~/Content/Assets/train.svg")' alt="Train icon"/>
                  </span>
                  ${ticket.Departure_Station} - ${ticket.Arrival_Station}
              </h5>
              <p class="card-text">
                  <span class="font-weight-bold">Dato:</span>
                  <span>${ticket.Date}</span>
              </p>
              <p class="card-text">
                  <span class="font-weight-bold">Avreise:</span>
                  <span>${ticket.Departure_Time}</span>
              </p>
              <p class="card-text">
                  <span class="font-weight-bold">Ankomst:</span>
                  <span>${ticket.Arrival_Time}</span>
              </p>
              <p class="card-text">
                  <span class="font-weight-bold">Reisetid: </span>
                  <span>${ticket.Duration}</span>

              </p>
              <p class="card-text">
                  <span class="font-weight-bold">Pris: </span>
                  <span>${ticket.Price},-</span>
              </p>
          </div>
      </div>
      `;
       $('.cards').append(hiddenCard);
    }

    function populateTripForm(ticket) {
      $('#hfDepStation').val(ticket.Departure_Station);
      $('#hfArrStation').val(ticket.Arrival_Station);
      $('#hfDepTime').val(ticket.Departure_Time);
      $('#hfArrTime').val(ticket.Arrival_Time);
      $('#hfDuration').val(ticket.Duration);
      $('#hfTrainChanges').val(ticket.Train_Changes);
      $('#hfPrice').val(ticket.Price);
      $('#hfPriceReturn').val(0);
    }

    function populateReturnTripForm(ticket) {
      $('#hfDepStationReturn').val(ticket.Departure_Station);
      $('#hfArrStationReturn').val(ticket.Arrival_Station);
      $('#hfDepTimeReturn').val(ticket.Departure_Time);
      $('#hfArrTimeReturn').val(ticket.Arrival_Time);
      $('#hfDurationReturn').val(ticket.Duration);
      $('#hfTrainChangesReturn').val(ticket.Train_Changes);
      $('#hfPriceReturn').val(ticket.Price);
    }

    });


    $(function () {

        $('.cards')
            .on('mouseenter', '#ticketCard', function() {
                $(this).addClass("shadow");
            })
            .on('mouseleave', '#ticketCard', function() {
                $(this).removeClass("shadow");
            });

        $("#postalcode").on('input', function () {
            const postalcode = $("#postalcode").val();
            const jsonin = {
                Postalcode: postalcode
            };

            if (postalcode.match("[0-9]{4}")) {
                $.ajax({
                    url: "@Url.Action("searchzip", "home")",
                    type: 'POST',
                    data: JSON.stringify(jsonin,),
                    contentType: "application/json;charset=utf-8",
                    success: function (response) {
                        console.log('setting postaltown');
                        $('#postaltown').val(response);
                    }
                });
            } else {
                $('#postaltown').val("Undefined");
            }
        });

          $("#changeTrip").click(function() {
            alert("Not yet implemented");
          });

    });

    $(function () {
        new Cleave('#card', {
            creditCard: true,
        });

        new Cleave('#expiry', {
            date: true,
            datePattern: ['m', 'y']
        });
    });


    function getDuration(duration) {
        const {days, hours, minutes} = duration;
        let durationString = (days !== "0") ? days + " d " : "";
        durationString += (hours !== "0") ? hours + " h " : "";
        durationString += minutes + " m ";
        return durationString;
    }

</script>
<div class="cards row">
    <div class="card bg-light mb-3 mr-3 col-m-4" id="ticketCard" style="max-width: 18rem;">
        <div class="card-header">Din valgte reise</div>
        <div class="card-body">
            <h5 class="card-title">
                <span>
                    <img id="tripIcon" src='@Url.Content("~/Content/Assets/train.svg")' alt="Train icon" />
                </span>
                @ViewBag.Model[0].Departure_Station - @ViewBag.Model[0].Arrival_Station
            </h5>
            <p class="card-text">
                <span class="font-weight-bold">Dato:</span>
                <span>@ViewBag.Model[0].Date</span>
            </p>
            <p class="card-text">
                <span class="font-weight-bold">Avreise:</span>
                <span>@ViewBag.Model[0].Departure_Time</span>
            </p>
            <p class="card-text">
                <span class="font-weight-bold">Ankomst:</span>
                <span>@ViewBag.Model[0].Arrival_Time</span>
            </p>
            <p class="card-text">
                <span class="font-weight-bold">Reisetid: </span>
                <span>@ViewBag.Model[0].Duration</span>

            </p>
            <p class="card-text">
                <span class="font-weight-bold">Pris: </span>
                <span>@Html.Raw(ViewBag.Model[0].Price),-</span>
            </p>
        </div>
    </div>
</div>

<hr />

<div id="ajax_form" class="container">
    @using (Ajax.BeginForm("RegisterTicket", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Success" }))
    {
        @Html.AntiForgeryToken()

        @Html.HiddenFor(model => model.TripTicket.DepartureStation, new { id = "hfDepStation" })
        @Html.HiddenFor(model => model.TripTicket.ArrivalStation, new { id = "hfArrStation" })
        @Html.HiddenFor(model => model.TripTicket.DepartureTime, new { id = "hfDepTime" })
        @Html.HiddenFor(model => model.TripTicket.ArrivalTime, new { id = "hfArrTime" })
        @Html.HiddenFor(model => model.TripTicket.Price, new { id = "hfPrice" })
        @Html.HiddenFor(model => model.TripTicket.Duration, new { id = "hfDuration" })
        @Html.HiddenFor(model => model.TripTicket.TrainChanges, new { id = "hfTrainChanges" })

        @Html.HiddenFor(model => model.ReturnTripTicket.DepartureStation, new { id = "hfDepStationReturn" })
        @Html.HiddenFor(model => model.ReturnTripTicket.ArrivalStation, new { id = "hfArrStationReturn" })
        @Html.HiddenFor(model => model.ReturnTripTicket.DepartureTime, new { id = "hfDepTimeReturn" })
        @Html.HiddenFor(model => model.ReturnTripTicket.ArrivalTime, new { id = "hfArrTimeReturn" })
        @Html.HiddenFor(model => model.ReturnTripTicket.Price, new { id = "hfPriceReturn" })
        @Html.HiddenFor(model => model.ReturnTripTicket.Duration, new { id = "hfDurationReturn" })
        @Html.HiddenFor(model => model.ReturnTripTicket.TrainChanges, new { id = "hfTrainChangesReturn" })
        <div class="row">
            <div class="col-7 col-xl-5 pl-md-4">
                <!--Name-->
                <div id="name" class="mt-2">
                    <div class="row">
                        <div class="col-12 p-0">
                            @Html.LabelFor(model => model.TripTicket.Customer.Givenname, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 col-md-6 p-0">
                            @Html.EditorFor(model => model.TripTicket.Customer.Givenname, new { htmlAttributes = new { placeholder = "Given name", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.Customer.Givenname, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-12 col-md-6 p-0">
                            @Html.EditorFor(model => model.TripTicket.Customer.Surname, new { htmlAttributes = new { placeholder = "Surname", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.Customer.Surname, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!--End name-->
                <!--Email-->
                <div id="email" class="mt-2">
                    <div class="row">
                        <div class="col p-0">
                            @Html.LabelFor(model => model.TripTicket.Customer.Email, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col p-0">
                            @Html.EditorFor(model => model.TripTicket.Customer.Email, new { htmlAttributes = new { placeholder = "example@email.com", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.Customer.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!--End email-->
                <!--Address-->
                <div id="address" class="mt-2">
                    <div class="row">
                        <div class="col p-0">
                            @Html.LabelFor(model => model.TripTicket.Customer.Address, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col p-0">
                            @Html.EditorFor(model => model.TripTicket.Customer.Address, new { htmlAttributes = new { placeholder = "Street address", @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.Customer.Address, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <!--End address-->
                <!--Postalcode-->
                <div id="post" class="mt-2">
                    <div class="row">
                        <div class="col p-0">
                            @Html.LabelFor(model => model.TripTicket.Customer.Zipcode.Postalcode, new { @class = "control-label" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 col-md-4 p-0">
                            @Html.EditorFor(model => model.TripTicket.Customer.Zipcode.Postalcode, new { htmlAttributes = new { placeholder = "Zipcode", id = "postalcode", @class = "form-control" } })
                            @*<div class="pl-1">
                                    <label id="postaltown"></label>
                                </div>*@
                        </div>
                        <div class="col-12 col-md-8 p-0">
                            <input id="postaltown" class="form-control" disabled />
                        </div>
                        @Html.ValidationMessageFor(model => model.TripTicket.Customer.Zipcode.Postalcode, "", new { @class = "text-danger" })
                    </div>
                </div>
                <!--End postalcode-->
                <!--Card-->
            </div>
        </div>

        <hr />

        <div class="row">
            <div class="col-7 col-xl-5 pl-md-4">
                <div class="col-12 p-0">
                    <h4>Card info</h4>
                </div>
                <div class="col-12 p-0">
                    <div class="row">
                        <div class="col-12 p-0">
                            @Html.EditorFor(model => model.TripTicket.CreditCard.Card_Number, new { htmlAttributes = new { placeholder = "Card number", id = "card", @class = "form-control card" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.CreditCard.Card_Number, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 col-md-7 p-0">
                            @Html.EditorFor(model => model.TripTicket.CreditCard.Expiry_Date, new { htmlAttributes = new { placeholder = "MM/YY", id = "expiry", @class = "form-control card" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.CreditCard.Expiry_Date, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-12 col-md-5 p-0">
                            @Html.EditorFor(model => model.TripTicket.CreditCard.Cvc, new { htmlAttributes = new { maxlength = "3", minlength = "3", placeholder = "CVC", id = "expiry", @class = "form-control card" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.CreditCard.Cvc, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-12 p-0">
                            @Html.EditorFor(model => model.TripTicket.CreditCard.Card_Holder, new { htmlAttributes = new { placeholder = "Card holder", @class = "form-control card" } })
                            @Html.ValidationMessageFor(model => model.TripTicket.CreditCard.Card_Holder, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>
            <!--End card-->
        </div>

        <div class="row">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Bekreft kjøp" class="btn btn-success" id="confirmPurchase" />
            </div>
        </div>

        <hr />
        <div class="form-group">
            <div class="col-md-offset-2 col-md-12 text-success">
                @ViewBag.Records
            </div>
        </div>
    }
</div>

<style>
    input {
        max-width: 100%;
    }
</style>