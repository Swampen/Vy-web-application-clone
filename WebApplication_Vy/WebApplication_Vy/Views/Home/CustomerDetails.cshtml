@model WebApplication_Vy.Models.DTO.SubmitPurchaseDTO

@{
    ViewBag.Title = "CustomerDetails";
}

<script type="text/javascript">
    $(function() {
    let ticketData = @Html.Raw(Json.Encode(ViewBag.Model));
    console.log(ticketData);
        const {
            Departure_Station,
            Arrival_Station,
            Departure_Time,
            Arrival_Time,
            Duration,
            Train_Changes,
            Price
        } = ticketData;     
        console.log(Duration);
        
      $('#duration').text(Duration);
      
      $('#hfDepStation').val(Departure_Station);
      $('#hfArrStation').val(Arrival_Station);
      $('#hfDepTime').val(Departure_Time);
      $('#hfArrTime').val(Arrival_Time);
      $('#hfDuration').val(Duration);
      $('#hfTrainChanges').val(Train_Changes);
      $('#hfPrice').val(Price);
    });
    
    $(function () {
        
        $("#postalcode").on('input', function () {
            const postalcode = $("#postalcode").val();
            const jsonin = {
                Postalcode: postalcode
            };

            if (postalcode.match("[0-9]{4}")) {
                $.ajax({
                    url: "@Url.Action("searchzip", "home")",
                    type: 'POST',
                    data: JSON.stringify(jsonin,),
                    contentType: "application/json;charset=utf-8",
                    success: function (response) {
                        console.log('setting postaltown');     
                        $('#postaltown').text(response);
                    }
                });
            } else {
                $('#postaltown').text("Undefined");
            }
        });
              
          $("#changeTrip").click(function() {
            alert("Not yet implemented");
          });
        
    });
        
    function getDuration(duration) {
        const {days, hours, minutes} = duration;
        let durationString = (days !== "0") ? days + " d " : "";
        durationString += (hours !== "0") ? hours + " h " : "";
        durationString += minutes + " m ";
        return durationString;
    }
</script>

<div class="card bg-light mb-3" style="max-width: 18rem;">
    <div class="card-header">Din valgte reise</div>
    <div class="card-body">
        <h5 class="card-title">
            <span>
                <img id="tripIcon" src='@Url.Content("~/Content/Assets/train.svg")' alt="Train icon"/>
            </span>
            @ViewBag.Model.Departure_Station - @ViewBag.Model.Arrival_Station
        </h5>
        <p class="card-text">
            <span class="font-weight-bold">Dato:</span>
            <span>@ViewBag.Model.Date</span>
        </p>
        <p class="card-text">
            <span class="font-weight-bold">Avreise:</span>
            <span>@ViewBag.Model.Departure_Time</span>
        </p>
        <p class="card-text">
            <span class="font-weight-bold">Ankomst:</span>
            <span>@ViewBag.Model.Arrival_Time</span>
        </p>
        <p class="card-text">
            <span class="font-weight-bold">Reisetid: </span>
            <span id="duration"></span>

        </p>
        <p class="card-text">
            <span class="font-weight-bold">Pris: </span>
            <span>@ViewBag.Model.Price</span>

        </p>
        <button class="btn btn-primary" type="button" id="changeTrip">Endre reise</button>
    </div>
</div>

<div id="ajax_form">
    @using (Ajax.BeginForm("RegisterTicket", "Home", new AjaxOptions {HttpMethod = "POST", OnSuccess = "Success"}))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Ticket.DepartureStation, new {@id = "hfDepStation"})
        @Html.HiddenFor(model => model.Ticket.ArrivalStation, new {@id = "hfArrStation"})
        @Html.HiddenFor(model => model.Ticket.DepartureTime, new {@id = "hfArrTime"})
        @Html.HiddenFor(model => model.Ticket.ArrivalTime, new {@id = "hfDepTime"})
        @Html.HiddenFor(model => model.Ticket.Price, new {@id = "hfPrice"})
        @Html.HiddenFor(model => model.Ticket.Duration, new {@id = "hfDuration"})
        @Html.HiddenFor(model => model.Ticket.TrainChanges, new {@id = "hfTrainChanges"})

        <div class="form-horizontal">
            <hr/>

            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.Customer.Givenname, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ticket.Customer.Givenname, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Ticket.Customer.Givenname, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.Customer.Surname, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ticket.Customer.Surname, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Ticket.Customer.Surname, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.Customer.Address, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ticket.Customer.Address, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Ticket.Customer.Address, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Ticket.Customer.Zipcode.Postalcode, new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Ticket.Customer.Zipcode.Postalcode, new {htmlAttributes = new {id = "postalcode", @class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.Ticket.Customer.Zipcode.Postalcode, "", new {@class = "text-danger"})
                    <div class="pl-1"><label id="postaltown"></label></div>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Bekreft kjøp" class="btn btn-success" id="confirmPurchase"/>
                </div>
            </div>
            <hr/>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-12 text-success">
                    @ViewBag.Records
                </div>
            </div>
        </div>
    }
</div>