@model DAL.DTO.TripData.TripQueryDTO

@{
    ViewBag.Title = "Index";
}
<script type="text/javascript" src="~/Scripts/View_specific_scripts/index.js"></script>
<div id="ajax_form" class="container">
    @using (Ajax.BeginForm("Index", "Home", new AjaxOptions { HttpMethod = "POST", OnSuccess = "Success" }, new { id = "form" }))
    {
        @Html.AntiForgeryToken()
        <div align="center">
            <h1 class="display-4">Welcome! Where do you want to travel?</h1>
        </div>
        <div class="row pt-5">
            <div class="col-auto col-md-1"><!--spacing--></div>

            <div class="col-12 col-md-10">
                <!-- from - to row -->
                <div class="row">
                    <div class="col-12 col-md-5">
                        <div class="row">
                            <div class="col-12 text-md-right">
                                @Html.LabelFor(model => model.Departure_Station, htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                @Html.EditorFor(model => model.Departure_Station, new { htmlAttributes = new { placeholder = "Departure station", id = "Departure", @class = "stations form-control d-inline-block" } })
                                @Html.HiddenFor(model => model.Departure_StationId, new { id = "Departure_stationId" })
                                @Html.ValidationMessageFor(model => model.Departure_Station, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="col-12 col-md-2 text-center mt-4">
                        <img class="img-fluid" id="SwitchButton" src="@Url.Content("~/Content/Assets/SwitcherBlueGrey80.svg")" height="30" alt="arrows">
                    </div>
                    <div class="col-12 col-md-5">
                        <div class="row">

                            <div class="col-12">
                                @Html.LabelFor(model => model.Arrival_Station, htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-12">
                                @Html.EditorFor(model => model.Arrival_Station, new { htmlAttributes = new { placeholder = "Arrival station", id = "Arrival", @class = "stations form-control" } })
                                @Html.HiddenFor(model => model.Arrival_StationId, new { id = "Arrival_stationId"})
                                @Html.ValidationMessageFor(model => model.Arrival_Station, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                </div>

                <!-- Direct - retur buttons -->
                <div class="row mt-3">
                    <div class="col-12">
                        <div class="row">
                            <div class="col-12 text-center">
                                <span>One way or roundtrip?</span>
                            </div>
                        </div>
                        <div class="row pt-2">
                            <div class="col-12 text-center">
                                <input id="Round_Trip" type="checkbox" value="true" name="Round_Trip">
                            </div>
                        </div>
                    </div>
                </div>

                <!-- date - time -->
                <div class="row mt-3">
                    <div class="col-12 col-sm-7 col-md-5">
                        <div class="row">
                            <div class="col-auto col-xl-2 p-0"><!--spacing--></div>
                            <div class="col-12 col-xl-10">
                                @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-auto col-xl-2 p-0"><!--spacing--></div>
                            <div class="col-12 col-xl-10">
                                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { placeholder = "YYYY-MM-DD", @readonly = "readonly", id = "date", @class = "form-control bg-white date-picker" } })
                                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="col-auto col-md-2 p-0"><!--spacing--></div>

                    <div class="col-12 col-sm-5 col-md-5">
                        <div class="row">
                            <div class="col-12 col-xl-10">
                                @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-auto col-xl-2"><!--spacing--></div>
                        </div>
                        <div class="row">
                            <div class="col-12 col-xl-10">
                                <select id="time" name="Time" class="custom-select form-control" required>
                                    <option value="" selected>Choose a time...</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-auto col-xl-2"><!--spacing--></div>
                        </div>
                    </div>
                </div>

                <!-- hidden return div -->
                <div class="row mt-3" id="ReturnDiv" style="display: none">
                    <div class="col-12 col-sm-7 col-md-5">
                        <div class="row">
                            <div class="col-auto col-xl-2"><!--spacing--></div>
                            <div class="col-12 col-xl-10">
                                @Html.LabelFor(model => model.Return_Date, htmlAttributes: new { id = "Return_Date", @class = "control-label" })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-auto col-xl-2"><!--spacing--></div>
                            <div class="col-12 col-xl-10">
                                @Html.EditorFor(model => model.Return_Date, new { htmlAttributes = new { placeholder = "YYYY-MM-DD", @readonly = "readonly", id = "ReturnDate", @class = "form-control bg-white date-picker" } })
                                @Html.ValidationMessageFor(model => model.Return_Date, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>

                    <!-- spacing -->
                    <div class="col-auto col-md-2 p-0"></div>

                    <div class="col-12 col-sm-5 col-md-5">
                        <div class="row">
                            <div class="col-12 col-xl-10">
                                @Html.LabelFor(model => model.Return_Time, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div class="col-auto col-xl-2"><!--spacing--></div>
                        </div>
                        <div class="row">
                            <div class="col-12 col-xl-10">
                                <select id="Return_Time" name="Return_Time" class="custom-select form-control" required>
                                    <option value="" selected>Choose a time...</option>
                                </select>
                                @Html.ValidationMessageFor(model => model.Return_Time, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-auto col-xl-2"><!--spacing--></div>
                        </div>
                    </div>
                </div>

                <!-- Select people -->
                <div class="row mt-3">
                    <div class="col-12 col-md-6 p-0">
                        <div class="row mt-2">
                            <div class="col-12 col-md-6 col-lg-8  text-center text-md-right">
                                @Html.LabelFor(model => model.Adult, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div id="adult" class="col-12 col-md-6 col-lg-4 text-md-left text-center add-sub-ticket">
                                <button type="button" class="minus btn btn-secondary btn-circle btn-circle-sm"><span>-</span></button>
                                @Html.HiddenFor(model => model.Adult, new { @class = "control-label" })<b class="mt-1">1</b>
                                <button type="button" class="pluss btn btn-success btn-circle btn-circle-sm"><span class="vertical-align-center">+</span></button>
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div class="col-12 col-md-6 col-lg-8  text-center text-md-right">
                                @Html.LabelFor(model => model.Child, htmlAttributes: new { @class = "control-label" })
                            </div>
                            <div id="child" class="col-12 col-md-6 col-lg-4  text-md-left text-center add-sub-ticket">
                                <button type="button" class="minus btn btn-secondary btn-circle btn-circle-sm" disabled><span>-</span></button>
                                @Html.HiddenFor(model => model.Child, new { @class = "control-label" })<b class="mt-1">0</b>
                                <button type="button" class="pluss btn btn-success btn-circle btn-circle-sm"><span>+</span></button>
                            </div>
                        </div>
                    </div>

                    <div class="col col-md-6 p-0">
                        <div class="row mt-2">
                            <div id="student" class="col-12 col-md-6 col-lg-4  order-md-6 order-2 text-md-right text-center add-sub-ticket">
                                <button type="button" class="minus btn btn-secondary btn-circle btn-circle-sm" disabled><span>-</span></button>
                                @Html.HiddenFor(model => model.Student, new { @class = "control-label" })<b class="mt-1">0</b>
                                <button type="button" class="pluss btn btn-success btn-circle btn-circle-sm"><span>+</span></button>
                            </div>
                            <div class="col-12 col-md-6 col-lg-8  order-1 order-md-6 text-md-left text-center">
                                @Html.LabelFor(model => model.Student, htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                        <div class="row mt-2">
                            <div id="senior" class="col-12 col-md-6 col-lg-4  order-md-6 order-2 text-md-right text-center add-sub-ticket">
                                <button type="button" class="minus btn btn-secondary btn-circle btn-circle-sm" disabled><span>-</span></button>
                                @Html.HiddenFor(model => model.Senior, new { @class = "control-label " })<b class="mt-1">0</b>
                                <button type="button" class="pluss btn btn-success btn-circle btn-circle-sm"><span>+</span></button>
                            </div>
                            <div class="col-12 col-md-6 col-lg-8 order-md-6 order-1 text-md-left text-center">
                                @Html.LabelFor(model => model.Senior, htmlAttributes: new { @class = "control-label" })
                            </div>
                        </div>
                    </div>
                </div>

                <div align="center" class="mt-2">
                    <div class="form-group">
                        <div class="col-12 col-md-5">
                            <input type="submit" value="Search" class="btn btn-success pl-3 pr-3 submit" />
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-12 text-success">
                            @ViewBag.Records
                        </div>
                    </div>
                </div>

            </div>

            <div class="col-auto col-md-1 p-0"><!--spacing--></div>
        </div>
    }
</div>
<style>
    input, select {
        max-width: 100%;
    }

    .gj-picker table .disabled {
        background-color: #e6e6e6 !important;
    }

    .gj-picker table tbody td:last-child {
        background-color: #fa9b9b;
    }

    .gj-picker table tbody td div:hover {
        font-weight: bold;
    }

    .date-picker {
        border-top-right-radius: 4px !important;
        border-bottom-right-radius: 4px !important;
    }
</style>